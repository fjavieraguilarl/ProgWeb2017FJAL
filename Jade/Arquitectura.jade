extends Plantilla/template.jade
block main 

	h1 2.1 Arquitectura de las aplicaciones Web.
	p Una aplicación Web  es  proporcionada  por  un  servidor  Web  y  utilizada  por  usuarios  que  se Conectan desde cualquier punto vía clientes Web (browsers o navegadores). La arquitectura de un Sitio Web tiene tres componentes principales:
	ul
		li Un servidor Web
		li Una conexión de red
		li Uno o más clientes
	p El servidor Web distribuye páginas de información formateada a los clientes que las solicitan. Los requerimientos son hechos a través de una conexión de red, y para ello se usa el protocolo HTTP. Una vez que se solicita esta petición mediante el protocolo HTTP y la recibe el servidor Web, éste localiza la página Web en su sistema de archivos y la envía de vuelta al navegador que la solicitó.
	p Las aplicaciones Web están basadas en el modelo Cliente/Servidor que gestionan servidores web, y que utilizan como interfaz páginas web.
	.img_evo
		img(Src="Imagen/aqui2.png")
	p Las páginas Web son el componente principal de una aplicación o sitio Web. Los browsers piden páginas  (almacenadas  o creadas  dinámicamente) con  información  a  los  servidores  Web.  En algunos  ambientes  de  desarrollo de  aplicaciones  Web, las  páginas  contienen  código  HTML  y scripts dinámicos, que son ejecutados por el servidor antes de entregar la página.
	p Una vez que se entrega una página, la conexión entre el browser y el servidor Web se rompe, es decir que la lógica del negocio en el servidor solamente se activa por la ejecución de los scripts de las páginas solicitadas por el browser (en el servidor, no en el cliente). Cuando el browser ejecuta un script en el cliente, éste no tiene acceso directo a los recursos del servidor. Hay  otros  componentes  que no  son  scripts, como los  applets  (una aplicación  especial  que  se ejecuta  dentro de  un  navegador)  o los  componentes  ActiveX. Los  scripts  del  cliente  son  por lo general código JavaScript o VBSscript, mezclados con código HTML.

	h4 Las diferentes capas suelen ser:
	ul
		li Capa 1: Cliente de aplicación: Navegador Web
		li Capa 2 : Servidor de Aplicaciones: Apache, Servidor Tomcat con servlet’s
		li Capa 3 : Servidor de Datos: base de datos, servidor SMTP…
	br
	#vtjs
		h4 Ventajas de la arquitectura de tres capas:
	ul
		li Las llamadas de la interfaz del usuario en la estación de trabajo, al servidor de capa intermedia, son más flexiles que en el diseño de dos capas, ya que la estación solo necesita transferir parámetros a la capa intermedia.
		li Con la arquitectura de tres capas, la interfaz del cliente no es requerida para comprender o comunicarse con el receptor de los datos. Por lo tanto, esa estructura de los datos puede ser modificada sin cambiar la interfaz del usuario en la PC.
		li El código de la capa intermedia puede ser reutilizado por múltiples aplicaciones si está diseíado en formato modular.
		li La separación de roles en tres capas, hace más fácil reemplazar o modificar una capa sin afectar a los módulos restantes.
		li Desventajas de las Arquitecturas de Tres Capas y asadas en Web
		li Los ambientes de tres capas pueden incrementar el tráfico en la red y requiere más balance de carga u tolerancia a las fallas.
		li Los exploradores actuales no son todos iguales.
		li La estandarización entre diferentes proveedores ha sido lenta en desarrollarse. Muchas organizaciones son forzadas a escoger uno en lugar de otro, mientras que cada uno ofrece sus propias y distintas ventajas.

	.img_evo
		img(Src="Imagen/arqui1.png")
block footer
	p Practica de HTML5 y jade
	p Periodo Enero- Agosto 2017